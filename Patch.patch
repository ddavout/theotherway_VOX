diff --git a/Makefile_my b/Makefile_my
new file mode 100644
index 0000000..6dc0406
--- /dev/null
+++ b/Makefile_my
@@ -0,0 +1,70 @@
+#!/usr/bin/make
+# Makefile.  Generated from Makefile.in by configure.
+
+# Package-related substitution variables
+package        = festcat-voice-builder
+version        = 0.1
+tarname        = festcat-voice-builder
+distdir        = $(tarname)-$(version)
+
+# Prefix-related substitution variables
+prefix         = /usr/local
+exec_prefix    = ${prefix}
+bindir         = ${exec_prefix}/bin
+
+depsdir = /home/getac/Develop/festcat-voice-builder/deps
+toolsdir = /home/getac/Develop/festcat-voice-builder/tools
+workdir = /home/getac/Develop/festcat-voice-builder/work
+datdir = /home/getac/Develop/festcat-voice-builder/data
+resultsdir = /home/getac/Develop/festcat-voice-builder/results
+
+# Rule to create the different directories:
+# resultsdir: Holds the resulting .tar.gz package with the voice
+# toolsdir: where the tools are installed
+# workdir: where the intermediate files are generated
+$(resultsdir) $(toolsdir) $(workdir):
+	mkdir -p "$@"
+
+# Downloads and installs all the dependencies
+dependencies: $(toolsdir)
+	cd $(depsdir) && make all
+
+# Downloads and installs the language-specific tools
+lang_%: dependencies
+	cd $(datdir)/$* && make $@
+
+# This is a dirty kludge I need later.
+# Basically empty is empty and space is a space.
+empty:=
+space:= $(empty) $(empty)
+
+# Rule to train a voice. It basically is of the form
+# ${lang}_${spk}.spk. "make ca_ona.spk"
+%.spk: dependencies
+	# This next line: 
+	# 1. Replace "_" with " ": ca_ona.spk -> ca ona.spk
+	# 2. Get the first word: ca ona.spk -> ca
+	# So this is "cd data/ca && make ca_ona.spk"
+	echo $(word 1,$(subst _,$(space),$@))
+	cd $(datdir)/$(word 1,$(subst _,$(space),$@)) && \
+	$(MAKE) $@
+
+
+clean:
+	(cd $(datdir)/ca/ && make clean)
+	$(RM) -rf deps/HDecode-3.4.1.tar.gz
+	$(RM) -rf deps/HTK-3.4.1.tar.gz
+	$(RM) -rf deps/HTS-2.3_for_HTK-3.4.1.tar.bz2
+	$(RM) -rf deps/SPTK*
+	$(RM) -rf deps/festival-*.tar.gz
+	$(RM) -rf deps/hts_engine_API-1.*.tar.gz
+	$(RM) -rf deps/speech_tools-*.tar.gz
+	$(RM) -rf deps/hts deps/hts_engine_API-*
+	$(RM) -rf deps/htspatch
+	$(RM) -rf tools work
+
+distclean: clean
+	(cd $(datdir)/ca/ && make distclean)
+	$(RM) -rf Makefile autom4te.cache config.log config.status
+	$(RM) -rf data/ca/Makefile data/en/Makefile deps/Makefile
+
diff --git a/create_ca_samples_my.sh b/create_ca_samples_my.sh
new file mode 100755
index 0000000..c349fe2
--- /dev/null
+++ b/create_ca_samples_my.sh
@@ -0,0 +1,130 @@
+#!/bin/bash
+set -ev
+
+BASEDIR="$PWD"
+WORKDIR="$BASEDIR/work/create_ca_samples/"
+
+mkdir -p "$WORKDIR"
+mkdir -p "$BASEDIR/samples"
+cd "$WORKDIR"
+# wget http://festvox.org/packed/festival/2.4/speech_tools-2.4-release.tar.gz
+# wget http://festvox.org/packed/festival/2.4/festival-2.4-release.tar.gz
+# TODO only once
+	# wget http://festcat.talp.cat/download/upc_ca_base-3.0.6.tgz
+# we use "our" own festival and speech-tools	
+# tar xzf speech_tools-2.4-release.tar.gz
+# tar xzf festival-2.4-release.tar.gz
+	# mv upc_ca_base-3.0.6.tgz t_upc_ca_base-3.0.6.tgz
+	# tar xzf t_upc_ca_base-3.0.6.tgz
+# cd speech_tools
+# ./configure
+# make
+# cd ..
+# cd festival
+# ./configure
+# make
+# cd ..
+cd upc_ca_base-3.0.6 || exit 1
+  # --enable-festivalpath   --enable-festivalpath=/path/to/festival (specify a
+  #                         custom festival path)
+#   Fine tuning of the installation directories:
+#   --bindir=DIR            user executables [EPREFIX/bin]
+#   --sbindir=DIR           system admin executables [EPREFIX/sbin]
+#   --libexecdir=DIR        program executables [EPREFIX/libexec]
+#   --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]
+#   --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]
+#   --localstatedir=DIR     modifiable single-machine data [PREFIX/var]
+#   --libdir=DIR            object code libraries [EPREFIX/lib]
+#   --includedir=DIR        C header files [PREFIX/include]
+#   --oldincludedir=DIR     C header files for non-gcc [/usr/include]
+#   --datarootdir=DIR       read-only arch.-independent data root [PREFIX/share]
+#   --datadir=DIR           read-only architecture-independent data [DATAROOTDIR]
+#   --infodir=DIR           info documentation [DATAROOTDIR/info]
+#   --localedir=DIR         locale-dependent data [DATAROOTDIR/locale]
+#   --mandir=DIR            man documentation [DATAROOTDIR/man]
+#   --docdir=DIR            documentation root [DATAROOTDIR/doc/upc_ca_base]
+#   --htmldir=DIR           html documentation [DOCDIR]
+#   --dvidir=DIR            dvi documentation [DOCDIR]
+#   --pdfdir=DIR            pdf documentation [DOCDIR]
+#   --psdir=DIR             ps documentation [DOCDIR]
+
+# Optional Features:
+#   --disable-option-checking  ignore unrecognized --enable/--with options
+#   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
+#   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
+#   --enable-onlyinstall    --enable-onlyinstall (do not build, just install.)
+#   --enable-wagonpath      --enable-wagonpath=/path/to/wagon (specify a custom
+#                           wagon path)
+#   --enable-ngrambuildpath --enable-ngrambuildpath=/path/to/ngram_build
+#                           (specify a custom ngram_build path)
+#   --enable-festivalpath   --enable-festivalpath=/path/to/festival (specify a
+#                           custom festival path)
+
+# Report bugs to <https://github.com/festcat/festival-ca/issues>.
+# FestCat: Paquet b√†sic home page: <http://festcat.talp.cat>.
+
+
+# ./configure --enable-onlyinstall --enable-festivalpath="$PWD/../festival/bin"
+# tempo
+FESTIVALDIR=/home/getac/Develop/festival
+ESTDIR=/home/getac/Develop/festival
+FESTIVAL="$FESTIVALDIR"/bin
+WAGON="${ESTDIR}"/bin/wagon
+# essai non fructueux
+PERL=/usr/bin/perl; export PERL
+# configure ne passe pas shellcheck
+# ex: In /home/getac/Develop/festcat-voice-builder/configure line 24:
+  # alias -g '${1+"$@"}'='"$@"'
+  #          ^----------------^ SC2142 (error): Aliases can't use positional parameters. Use a function.
+# Problematic code:
+# alias archive='mv "$@" /backup'
+# Correct code:
+# archive() { mv "$@" /backup; }
+# Aliases just substitute the start of a command with something else. They
+# therefore can't use positional parameters, such as $1. Rewrite your alias as
+# a function.
+# on ne peut pas dire que mon perl fasse partie des "programs with nonstandard names/locations"
+# Some influential environment variables:
+#   CC          C compiler command
+#   CFLAGS      C compiler flags
+#   LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
+#               nonstandard directory <lib dir>
+#   LIBS        libraries to pass to the linker, e.g. -l<library>
+#   CPPFLAGS    (Objective) C/C++ preprocessor flags, e.g. -I<include dir> if
+#               you have headers in a nonstandard directory <include dir>
+#   CPP         C preprocessor
+#   htk_user    htk_user=USERNAME specify the HTK website user name
+#   htk_password
+#               htk_password=PASSWORD specify the HTK website password
+#   WORKDIR     WORKDIR=/directory/to/work/on specify the directory to work on
+
+# Use these variables to override the choices made by `configure' or to help
+# it to find libraries and programs with nonstandard names/locations.
+
+./configure --enable-onlyinstall --enable-festivalpath="$FESTIVAL" --enable-wagonpath="$WAGON"
+# Meta Information
+# # Programs:
+# FESTIVAL = /home/getac/Develop/festival/bin/festival
+# WAGON = 
+# PERL = 
+# ...
+
+# # Installation Variables:
+# FESTDATADIR = /home/getac/Develop/festival/lib
+# LANGUAGESSCMFILE = /home/getac/Develop/festival/lib/languages.scm
+# LANGUAGESSCMVERSION = directory
+# make install
+# cd ..
+# cd "$BASEDIR"
+# cp results/upc_ca*gz "$WORKDIR"
+# cd "$WORKDIR"
+# for myfile in $(ls upc_ca*gz); do
+#     myfilenoext=${myfile%.*}
+#     tar xzf "$myfile"
+#     cd "$myfilenoext"
+#     ./configure --enable-festivalpath="$WORKDIR/festival/bin"
+#     make
+#     cd "$WORKDIR"
+#     festival/bin/text2wave -eval "(voice_$myfilenoext)" -o "$myfilenoext.wav" "$BASEDIR/text_samples_ca.txt"
+#     mv "$myfilenoext.wav" "$BASEDIR/samples"
+#done
diff --git a/deps/Makefile_my b/deps/Makefile_my
new file mode 100644
index 0000000..2de5af2
--- /dev/null
+++ b/deps/Makefile_my
@@ -0,0 +1,143 @@
+#!/usr/bin/make
+# deps/Makefile.  Generated from Makefile.in by configure.
+
+toolsdir = /home/getac/Develop/festcat-voice-builder/tools
+
+WGET = /usr/bin/wget
+
+# Festival:
+# =========
+# -- Download parameters--
+Festival_File = festival-2.4-release.tar.gz
+Festival_MD5 = 49707d2f6744d5a67f81a96c36f7cb59
+Festival_URL = http://festvox.org/packed/festival/2.4/festival-2.4-release.tar.gz
+
+# Speech tools:
+# =========
+# -- Download parameters--
+SpeechTools_File = speech_tools-2.4-release.tar.gz
+SpeechTools_MD5 = 3d60e563135363eb2548d947f7ef4e14
+SpeechTools_URL = http://festvox.org/packed/festival/2.4/speech_tools-2.4-release.tar.gz
+
+# SPTK:
+# =========
+# -- Download parameters--
+SPTK_File = SPTK-3.10.tar.gz
+SPTK_MD5 = 96f879c97340f5d85f33b32a47d16e1b
+SPTK_URL = http://sourceforge.net/projects/sp-tk/files/SPTK/SPTK-3.10/SPTK-3.10.tar.gz/download
+
+# hts_engine:
+# =========
+# -- Download parameters--
+htsengine_File = hts_engine_API-1.10.tar.gz
+htsengine_MD5 = 5626d1e2522659e93fb295f0b42339f5
+htsengine_URL = http://sourceforge.net/projects/hts-engine/files/hts_engine%20API/hts_engine_API-1.10/hts_engine_API-1.10.tar.gz/download
+
+# HTS:
+# =========
+# -- Download parameters--
+HTS_File = HTS-2.3_for_HTK-3.4.1.tar.bz2
+HTS_MD5 = cb8e68a2ea2320b0e8fb519f86fa429d
+HTS_URL = http://hts.sp.nitech.ac.jp/archives/2.3/HTS-2.3_for_HTK-3.4.1.tar.bz2
+
+# HTK:
+# =========
+# -- Download parameters--
+HTK_File = HTK-3.4.1.tar.gz
+HTK_MD5 = b3fc12006b0af12f59cd573c07aa4c1d
+HTK_URL = http://htk.eng.cam.ac.uk/ftp/software/HTK-3.4.1.tar.gz
+HTK_USER = dan53
+HTK_PASSWORD = Qu@wig9o
+
+# HDecode:
+# =========
+# -- Download parameters--
+HDecode_File = HDecode-3.4.1.tar.gz
+HDecode_MD5 = 4e332a7fea6db58751cec878b80c3575
+HDecode_URL = http://htk.eng.cam.ac.uk/ftp/software/hdecode/HDecode-3.4.1.tar.gz
+HDecode_USER = dan53
+HDecode_PASSWORD = Qu@wig9o
+
+# pb pour HTS
+ALLDOWNLOADS = SPTK htsengine HTK HDecode
+ALLCONFIGURES = SPTK htsengine HTS
+download_all = $(addprefix download_,$(ALLDOWNLOADS)) 
+configure_all = $(addprefix configure_,$(ALLCONFIGURES)) 
+
+.PHONY: all $(download_all) $(configure_all)
+all: $(download_all) $(configure_all)
+
+# This target will check if the downloads are correct. If they are not
+# it will download them again, using a password if needed.
+$(download_all):
+	echo "$($(subst download_,,$@)_MD5)  $($(subst download_,,$@)_File)" | md5sum -c --status && echo "$(subst download_,,$@) already downloaded" || \
+	( rm -f $($(subst download_,,$@)_File) && \
+	$(WGET) --http-user=$($(subst download_,,$@)_USER) --http-password=$($(subst download_,,$@)_PASSWORD) --output-document=$($(subst download_,,$@)_File) $($(subst download_,,$@)_URL) )
+
+# SpeechTools and Festival have strange building systems and relative directories, 
+# so I just follow the default behaviour.
+# FIXME: Add test for alsa and ncurses to configure.ac from speech_tools/configure.ac
+configure_SpeechTools: download_SpeechTools
+	if [ ! -f $(toolsdir)/speech_tools/bin/ch_wave ]; then \
+		rm -rf $(toolsdir)/speech_tools && \
+		mkdir $(toolsdir)/speech_tools && \
+		tar xzf $(SpeechTools_File) -C $(toolsdir)/speech_tools --strip-components 1 && \
+		cd $(toolsdir)/speech_tools && \
+		./configure && \
+		make && \
+		make install; \
+	fi
+
+configure_Festival: download_Festival configure_SpeechTools
+	if [ ! -f $(toolsdir)/festival/bin/festival ]; then \
+		rm -rf $(toolsdir)/festival && \
+		mkdir $(toolsdir)/festival && \
+		tar xzf $(Festival_File) -C $(toolsdir)/festival --strip-components 1 && \
+		cd $(toolsdir)/"festival" && \
+		./configure && \
+		make && \
+		make install; \
+	fi
+
+configure_SPTK: download_SPTK
+	if [ ! -f $(toolsdir)/bin/x2x ]; then \
+		rm -rf "SPTK" && mkdir "SPTK" && \
+		tar xzf $(SPTK_File) -C SPTK --strip-components 1 && \
+		cd "SPTK" && \
+		./configure --prefix=$(toolsdir) && \
+		make && \
+		make install; \
+	fi
+
+configure_htsengine: download_htsengine
+	if [ ! -f $(toolsdir)/bin/hts_engine ]; then \
+		rm -rf "hts_engine_API" && mkdir "hts_engine_API" && \
+		tar xzf $(htsengine_File) -C "hts_engine_API" --strip-components 1 && \
+		cd "hts_engine_API" && \
+		./configure --prefix=$(toolsdir) && \
+		make && \
+		make install; \
+	fi
+
+# I am removing the need for ActiveTcl by installing tcl-snack and libx11-dev
+# FIXME: Proper tests are required in configure.ac. Are these packages still needed?
+# pb download_HTS
+configure_HTS: download_HDecode
+	if [ ! -f $(toolsdir)/bin/HHEd ]; then \
+		rm -rf hts htspatch && \
+		tar xzf $(HTK_File) && \
+		tar xzf $(HDecode_File) && \
+		rm -rf hts && \
+		mv htk hts && \
+		mkdir -p htspatch && \
+		cp $(HTS_File) htspatch && \
+		cd htspatch && \
+		tar xjf $(HTS_File) && \
+		mv HTS-2.3_for_HTK-3.4.1.patch ../hts && \
+		cd ../hts && \
+		patch -p1 -d . < HTS-2.3_for_HTK-3.4.1.patch && \
+		./configure --enable-hdecode CFLAGS="-fopenmp" --prefix=$(toolsdir) && \
+		make all && \
+		make install; \
+	fi
+
diff --git a/deps/Makefile_my_SPTK b/deps/Makefile_my_SPTK
new file mode 100644
index 0000000..0bd14f0
--- /dev/null
+++ b/deps/Makefile_my_SPTK
@@ -0,0 +1,148 @@
+#!/usr/bin/make
+# deps/Makefile.  Generated from Makefile.in by configure.
+
+toolsdir = /home/getac/Develop/SPTK-3-10
+
+WGET = /usr/bin/wget
+
+# Festival:
+# =========
+# -- Download parameters--
+Festival_File = festival-2.4-release.tar.gz
+Festival_MD5 = 49707d2f6744d5a67f81a96c36f7cb59
+Festival_URL = http://festvox.org/packed/festival/2.4/festival-2.4-release.tar.gz
+
+# Speech tools:
+# =========
+# -- Download parameters--
+SpeechTools_File = speech_tools-2.4-release.tar.gz
+SpeechTools_MD5 = 3d60e563135363eb2548d947f7ef4e14
+SpeechTools_URL = http://festvox.org/packed/festival/2.4/speech_tools-2.4-release.tar.gz
+
+# SPTK:
+# =========
+# -- Download parameters--
+SPTK_File = SPTK-3.10.tar.gz
+# SPTK_MD5 = 96f879c97340f5d85f33b32a47d16e1b
+# SPTK_URL = http://sourceforge.net/projects/sp-tk/files/SPTK/SPTK-3.10/SPTK-3.10.tar.gz/download
+SPTK_URL = http://sourceforge.net/projects/sp-tk/files/SPTK/SPTK-3.6/SPTK-3.6.tar.gz/download
+
+# hts_engine:
+# =========
+# -- Download parameters--
+htsengine_File = hts_engine_API-1.10.tar.gz
+htsengine_MD5 = 5626d1e2522659e93fb295f0b42339f5
+htsengine_URL = http://sourceforge.net/projects/hts-engine/files/hts_engine%20API/hts_engine_API-1.10/hts_engine_API-1.10.tar.gz/download
+
+# HTS:
+# =========
+# -- Download parameters--
+HTS_File = HTS-2.3_for_HTK-3.4.1.tar.bz2
+HTS_MD5 = cb8e68a2ea2320b0e8fb519f86fa429d
+HTS_URL = http://hts.sp.nitech.ac.jp/archives/2.3/HTS-2.3_for_HTK-3.4.1.tar.bz2
+
+# HTK:
+# =========
+# -- Download parameters--
+HTK_File = HTK-3.4.1.tar.gz
+HTK_MD5 = b3fc12006b0af12f59cd573c07aa4c1d
+HTK_URL = http://htk.eng.cam.ac.uk/ftp/software/HTK-3.4.1.tar.gz
+HTK_USER = dan53
+HTK_PASSWORD = Qu@wig9o
+
+# HDecode:
+# =========
+# -- Download parameters--
+HDecode_File = HDecode-3.4.1.tar.gz
+HDecode_MD5 = 4e332a7fea6db58751cec878b80c3575
+HDecode_URL = http://htk.eng.cam.ac.uk/ftp/software/hdecode/HDecode-3.4.1.tar.gz
+HDecode_USER = dan53
+HDecode_PASSWORD = Qu@wig9o
+
+
+ALLDOWNLOADS = SPTK
+ALLCONFIGURES = SPTK
+download_all = $(addprefix download_,$(ALLDOWNLOADS)) 
+configure_all = $(addprefix configure_,$(ALLCONFIGURES)) 
+
+.PHONY: all $(download_all) $(configure_all)
+all: $(download_all) $(configure_all)
+
+# This target will check if the downloads are correct. If they are not
+# it will download them again, using a password if needed.
+$(download_all):
+	echo "$($(subst download_,,$@)_MD5)  $($(subst download_,,$@)_File)" | md5sum -c --status && echo "$(subst download_,,$@) already downloaded" || \
+	( rm -f $($(subst download_,,$@)_File) && \
+	$(WGET) --http-user=$($(subst download_,,$@)_USER) --http-password=$($(subst download_,,$@)_PASSWORD) --output-document=$($(subst download_,,$@)_File) $($(subst download_,,$@)_URL) )
+
+# SpeechTools and Festival have strange building systems and relative directories, 
+# so I just follow the default behaviour.
+# FIXME: Add test for alsa and ncurses to configure.ac from speech_tools/configure.ac
+configure_SpeechTools: download_SpeechTools
+	if [ ! -f $(toolsdir)/speech_tools/bin/ch_wave ]; then \
+		#rm -rf $(toolsdir)/speech_tools && \
+		mkdir $(toolsdir)/speech_tools && \
+		tar xzf $(SpeechTools_File) -C $(toolsdir)/speech_tools --strip-components 1 && \
+		cd $(toolsdir)/speech_tools && \
+		./configure && \
+		make && \
+		make install; \
+	fi
+
+configure_Festival: download_Festival configure_SpeechTools
+	if [ ! -f $(toolsdir)/festival/bin/festival ]; then \
+		rm -rf $(toolsdir)/festival && \
+		mkdir $(toolsdir)/festival && \
+		tar xzf $(Festival_File) -C $(toolsdir)/festival --strip-components 1 && \
+		cd $(toolsdir)/"festival" && \
+		./configure && \
+		make && \
+		make install; \
+	fi
+# download_SPTK
+configure_SPTK: 
+	if [ ! -f $(toolsdir)/bin/x2x ]; then \
+# 		rm -rf "SPTK" && mkdir "SPTK" && \
+		tar xzf $(SPTK_File) -C SPTK --strip-components 1 && \
+		cd "SPTK" && \
+		./configure --prefix=$(toolsdir) && \
+		make && \
+		make install; \
+	fi
+
+configure_htsengine: download_htsengine
+	if [ ! -f $(toolsdir)/bin/hts_engine ]; then \
+		rm -rf "hts_engine_API" && mkdir "hts_engine_API" && \
+		tar xzf $(htsengine_File) -C "hts_engine_API" --strip-components 1 && \
+		cd "hts_engine_API" && \
+		./configure --prefix=$(toolsdir) && \
+		make && \
+		make install; \
+	fi
+
+# I am removing the need for ActiveTcl by installing tcl-snack and libx11-dev
+# FIXME: Proper tests are required in configure.ac. Are these packages still needed?
+configure_HTS: download_HTS download_HDecode download_HTS
+	if [ ! -f $(toolsdir)/bin/HHEd ]; then \
+		rm -rf hts htspatch && \
+		tar xzf $(HTK_File) && \
+		tar xzf $(HDecode_File) && \
+		rm -rf hts && \
+		mv htk hts && \
+		mkdir -p htspatch && \
+		cp $(HTS_File) htspatch && \
+		cd htspatch && \
+		tar xjf $(HTS_File) && \
+		mv HTS-2.3_for_HTK-3.4.1.patch ../hts && \
+		cd ../hts && \
+		patch -p1 -d . < HTS-2.3_for_HTK-3.4.1.patch && \
+		./configure --enable-hdecode CFLAGS="-fopenmp" --prefix=$(toolsdir) && \
+		make all && \
+		make install; \
+	fi
+
+# checking for ar... ar
+# checking for csh... no
+# configure: error: "Cannot find csh"
+# make: *** [Makefile_my_SPTK:103 : configure_SPTK] Erreur 1
+# SPTK-3.10.tar.gz je prends 3.6 comme dans festival
diff --git a/deps/Makefile_ori b/deps/Makefile_ori
new file mode 100644
index 0000000..2436fa1
--- /dev/null
+++ b/deps/Makefile_ori
@@ -0,0 +1,142 @@
+#!/usr/bin/make
+# deps/Makefile.  Generated from Makefile.in by configure.
+
+toolsdir = /home/getac/Develop/festcat-voice-builder/tools
+
+WGET = /usr/bin/wget
+
+# Festival:
+# =========
+# -- Download parameters--
+Festival_File = festival-2.4-release.tar.gz
+Festival_MD5 = 49707d2f6744d5a67f81a96c36f7cb59
+Festival_URL = http://festvox.org/packed/festival/2.4/festival-2.4-release.tar.gz
+
+# Speech tools:
+# =========
+# -- Download parameters--
+SpeechTools_File = speech_tools-2.4-release.tar.gz
+SpeechTools_MD5 = 3d60e563135363eb2548d947f7ef4e14
+SpeechTools_URL = http://festvox.org/packed/festival/2.4/speech_tools-2.4-release.tar.gz
+
+# SPTK:
+# =========
+# -- Download parameters--
+SPTK_File = SPTK-3.10.tar.gz
+SPTK_MD5 = 96f879c97340f5d85f33b32a47d16e1b
+SPTK_URL = http://sourceforge.net/projects/sp-tk/files/SPTK/SPTK-3.10/SPTK-3.10.tar.gz/download
+
+# hts_engine:
+# =========
+# -- Download parameters--
+htsengine_File = hts_engine_API-1.10.tar.gz
+htsengine_MD5 = 5626d1e2522659e93fb295f0b42339f5
+htsengine_URL = http://sourceforge.net/projects/hts-engine/files/hts_engine%20API/hts_engine_API-1.10/hts_engine_API-1.10.tar.gz/download
+
+# HTS:
+# =========
+# -- Download parameters--
+HTS_File = HTS-2.3_for_HTK-3.4.1.tar.bz2
+HTS_MD5 = cb8e68a2ea2320b0e8fb519f86fa429d
+HTS_URL = http://hts.sp.nitech.ac.jp/archives/2.3/HTS-2.3_for_HTK-3.4.1.tar.bz2
+
+# HTK:
+# =========
+# -- Download parameters--
+HTK_File = HTK-3.4.1.tar.gz
+HTK_MD5 = b3fc12006b0af12f59cd573c07aa4c1d
+HTK_URL = http://htk.eng.cam.ac.uk/ftp/software/HTK-3.4.1.tar.gz
+HTK_USER = dan53
+HTK_PASSWORD = Qu@wig9o
+
+# HDecode:
+# =========
+# -- Download parameters--
+HDecode_File = HDecode-3.4.1.tar.gz
+HDecode_MD5 = 4e332a7fea6db58751cec878b80c3575
+HDecode_URL = http://htk.eng.cam.ac.uk/ftp/software/hdecode/HDecode-3.4.1.tar.gz
+HDecode_USER = dan53
+HDecode_PASSWORD = Qu@wig9o
+
+
+ALLDOWNLOADS = htsengine HTS HTK HDecode
+ALLCONFIGURES = SPTK htsengine HTS
+download_all = $(addprefix download_,$(ALLDOWNLOADS)) 
+configure_all = $(addprefix configure_,$(ALLCONFIGURES)) 
+
+.PHONY: all $(download_all) $(configure_all)
+all: $(download_all) $(configure_all)
+
+# This target will check if the downloads are correct. If they are not
+# it will download them again, using a password if needed.
+$(download_all):
+	echo "$($(subst download_,,$@)_MD5)  $($(subst download_,,$@)_File)" | md5sum -c --status && echo "$(subst download_,,$@) already downloaded" || \
+	( rm -f $($(subst download_,,$@)_File) && \
+	$(WGET) --http-user=$($(subst download_,,$@)_USER) --http-password=$($(subst download_,,$@)_PASSWORD) --output-document=$($(subst download_,,$@)_File) $($(subst download_,,$@)_URL) )
+
+# SpeechTools and Festival have strange building systems and relative directories, 
+# so I just follow the default behaviour.
+# FIXME: Add test for alsa and ncurses to configure.ac from speech_tools/configure.ac
+configure_SpeechTools: download_SpeechTools
+	if [ ! -f $(toolsdir)/speech_tools/bin/ch_wave ]; then \
+		rm -rf $(toolsdir)/speech_tools && \
+		mkdir $(toolsdir)/speech_tools && \
+		tar xzf $(SpeechTools_File) -C $(toolsdir)/speech_tools --strip-components 1 && \
+		cd $(toolsdir)/speech_tools && \
+		./configure && \
+		make && \
+		make install; \
+	fi
+
+configure_Festival: download_Festival configure_SpeechTools
+	if [ ! -f $(toolsdir)/festival/bin/festival ]; then \
+		rm -rf $(toolsdir)/festival && \
+		mkdir $(toolsdir)/festival && \
+		tar xzf $(Festival_File) -C $(toolsdir)/festival --strip-components 1 && \
+		cd $(toolsdir)/"festival" && \
+		./configure && \
+		make && \
+		make install; \
+	fi
+
+configure_SPTK: download_SPTK
+	if [ ! -f $(toolsdir)/bin/x2x ]; then \
+		rm -rf "SPTK" && mkdir "SPTK" && \
+		tar xzf $(SPTK_File) -C SPTK --strip-components 1 && \
+		cd "SPTK" && \
+		./configure --prefix=$(toolsdir) && \
+		make && \
+		make install; \
+	fi
+
+configure_htsengine: download_htsengine
+	if [ ! -f $(toolsdir)/bin/hts_engine ]; then \
+		rm -rf "hts_engine_API" && mkdir "hts_engine_API" && \
+		tar xzf $(htsengine_File) -C "hts_engine_API" --strip-components 1 && \
+		cd "hts_engine_API" && \
+		./configure --prefix=$(toolsdir) && \
+		make && \
+		make install; \
+	fi
+
+# I am removing the need for ActiveTcl by installing tcl-snack and libx11-dev
+# FIXME: Proper tests are required in configure.ac. Are these packages still needed?
+configure_HTS: download_HTS download_HDecode download_HTS
+	if [ ! -f $(toolsdir)/bin/HHEd ]; then \
+		rm -rf hts htspatch && \
+		tar xzf $(HTK_File) && \
+		tar xzf $(HDecode_File) && \
+		rm -rf hts && \
+		mv htk hts && \
+		mkdir -p htspatch && \
+		cp $(HTS_File) htspatch && \
+		cd htspatch && \
+		tar xjf $(HTS_File) && \
+		mv HTS-2.3_for_HTK-3.4.1.patch ../hts && \
+		cd ../hts && \
+		patch -p1 -d . < HTS-2.3_for_HTK-3.4.1.patch && \
+		./configure --enable-hdecode CFLAGS="-fopenmp" --prefix=$(toolsdir) && \
+		make all && \
+		make install; \
+	fi
+
diff --git a/deps/pour_voir/festival-2.4-release.tar.gz b/deps/pour_voir/festival-2.4-release.tar.gz
new file mode 100644
index 0000000..d2994b1
Binary files /dev/null and b/deps/pour_voir/festival-2.4-release.tar.gz differ
diff --git a/deps/pour_voir/speech_tools-2.4-release.tar.gz b/deps/pour_voir/speech_tools-2.4-release.tar.gz
new file mode 100644
index 0000000..7a557cb
Binary files /dev/null and b/deps/pour_voir/speech_tools-2.4-release.tar.gz differ
diff --git a/doc/pb1 b/doc/pb1
new file mode 100644
index 0000000..a424dea
--- /dev/null
+++ b/doc/pb1
@@ -0,0 +1,212 @@
+# Copy this tar.gz file to the results directory \
+mkdir -p /home/getac/Develop/festcat-voice-builder/results && \
+cp /home/getac/Develop/festcat-voice-builder/work/ca_ona/pkg/"upc_ca"_ona_hts.tgz /home/getac/Develop/festcat-voice-builder/results ) || exit 1
+checking for gawk... gawk
+checking for perl... /usr/bin/perl
+checking for python... /usr/bin
+checking for wc... /usr/bin/wc
+checking for text2utt... :
+configure: error: Can't find text2utt of festival
+make: *** [Makefile:61 : ca_ona.spk] Erreur 1
+make¬†: on quitte le r√©pertoire ¬´¬†/home/getac/Develop/festcat-voice-builder/data/ca¬†¬ª
+je ne suis pas sure d'avoir vu que test2utt n'√©tait pas n√©cessaire
+j'enl√®ve le test  ?
+
+Configuration:
+  -h, --help              display this help and exit
+      --help=short        display options specific to this package
+      --help=recursive    display the short help of all the included packages
+  -V, --version           display version information and exit
+  -q, --quiet, --silent   do not print `checking ...' messages
+      --cache-file=FILE   cache test results in FILE [disabled]
+  -C, --config-cache      alias for `--cache-file=config.cache'
+  -n, --no-create         do not create output files
+      --srcdir=DIR        find the sources in DIR [configure dir or `..']
+
+Installation directories:
+  --prefix=PREFIX         install architecture-independent files in PREFIX
+                          [/usr/local]
+  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
+                          [PREFIX]
+
+By default, `make install' will install all the files in
+`/usr/local/bin', `/usr/local/lib' etc.  You can specify
+an installation prefix other than `/usr/local' using `--prefix',
+for instance `--prefix=$HOME'.
+
+For better control, use the options below.
+
+Fine tuning of the installation directories:
+  --bindir=DIR            user executables [EPREFIX/bin]
+  --sbindir=DIR           system admin executables [EPREFIX/sbin]
+  --libexecdir=DIR        program executables [EPREFIX/libexec]
+  --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]
+  --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]
+  --localstatedir=DIR     modifiable single-machine data [PREFIX/var]
+  --runstatedir=DIR       modifiable per-process data [LOCALSTATEDIR/run]
+  --libdir=DIR            object code libraries [EPREFIX/lib]
+  --includedir=DIR        C header files [PREFIX/include]
+  --oldincludedir=DIR     C header files for non-gcc [/usr/include]
+  --datarootdir=DIR       read-only arch.-independent data root [PREFIX/share]
+  --datadir=DIR           read-only architecture-independent data [DATAROOTDIR]
+  --infodir=DIR           info documentation [DATAROOTDIR/info]
+  --localedir=DIR         locale-dependent data [DATAROOTDIR/locale]
+  --mandir=DIR            man documentation [DATAROOTDIR/man]
+  --docdir=DIR            documentation root
+                          [DATAROOTDIR/doc/hts-demo_cmu-arctic-slt]
+  --htmldir=DIR           html documentation [DOCDIR]
+  --dvidir=DIR            dvi documentation [DOCDIR]
+  --pdfdir=DIR            pdf documentation [DOCDIR]
+  --psdir=DIR             ps documentation [DOCDIR]
+
+Optional Packages:
+  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
+  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
+  --with-fest-search-path specify the additional festival search path
+  --with-sptk-search-path specify the additional SPTK binary search path
+  --with-matlab-search-path
+                          specify the additional MATLAB binary search path
+  --with-straight-path    specify the STRAIGHT MATLAB code path
+  --with-hts-search-path  specify the additional HTS binary search path
+  --with-hts-engine-search-path
+                          specify the additional hts_engine binary search path
+
+Some influential environment variables:
+  FULLCONTEXT_FORMAT
+              full context label format (default=HTS_TTS_ENG)
+  FULLCONTEXT_VERSION
+              version of full context label format (default=1.0)
+  DATASET     dataset (default=cmu_us_arctic)
+  SPEAKER     speaker name (default=slt)
+  VER         version number of this setting (default=1)
+  QNAME       question set name (default=en_US.talk)
+  USEUTT      generate labels from utt files instead of text files (0:off or
+              1:on, default=1)
+  USESTRAIGHT turn on STRAIGHT-based analysis (0:off or 1:on, default=0)
+  FRAMELEN    frame length in point (default=1200)
+  FRAMESHIFT  frame shift in point (default=240)
+  WINDOWTYPE  window type -> 0: Blackman 1: Hamming 2: Hanning (default=1)
+  NORMALIZE   normalization -> 0: none 1: by power 2: by magnitude (default=1)
+  FFTLEN      FFT length in point (default=2048)
+  SAMPFREQ    sampling frequency in Hz (default=48000)
+  FREQWARP    frequency warping factor (default=0.55)
+  GAMMA       pole/zero weight factor (0: mel-cepstral analysis 1: LPC
+              analysis 2,3,...,N: mel-generalized cepstral (MGC) analysis)
+              (default=0)
+  MGCORDER    order of MGC analysis (default=34 for cepstral form, default=12
+              for LSP form)
+  BAPORDER    order of BAP analysis (default=24)
+  LNGAIN      use logarithmic gain instead of linear gain (default=1)
+  LOWERF0     lower limit for F0 extraction in Hz (default=110)
+  UPPERF0     upper limit for F0 extraction in Hz (default=280)
+  PSTFILTER_MCP
+              postfiltering factor for mel-cepstral (default=1.4)
+  PSTFILTER_LSP
+              postfiltering factor for LSP (default=0.7)
+  IMPLEN      length of impulse response (default=4096 for cepstral form,
+              default=576 for LSP form)
+  NMGCWIN     number of delta windows for MGC coefficients (default=3)
+  NLF0WIN     number of delta windows for log F0 values (default=3)
+  NBAPWIN     number of delta windows for band aperiodicity values (default=3)
+  NSTATE      number of HMM states (default=5)
+  NITER       number of iterations of embedded training (default=5)
+  WFLOOR      mixture weight flooring scale (default=5000)
+  DAEM        DAEM algorithm for parameter estimation (0:off or 1:on,
+              default=0)
+  DAEMNITER   number of iterations of DAEM-based embedded training
+              (default=10)
+  DAEMALPHA   schedule of updating temperature parameter for DAEM
+              (default=1.0)
+  MAXDEV      maximum duration scaling factor (default=10)
+  MINDUR      minimum duration to be evaluated (default=5)
+  NMGCTRANSBLK
+              number of blocks for MGC transforms (default=3)
+  NLF0TRANSBLK
+              number of blocks for log F0 transforms (default=1)
+  NBAPTRANSBLK
+              number of blocks for band aperiodicity transforms (default=3)
+  MGCBANDWIDTH
+              band width for MGC transforms (default=35 for cepstral form,
+              derault=2 for LSP form)
+  LF0BANDWIDTH
+              band width for log F0 transforms (default=1)
+  BAPBANDWIDTH
+              band width for band aperiodicity transforms (default=25)
+  PGTYPE      type of speech parameter generation algorithm (0: Cholesky, 1:
+              MixHidden, 2: StateHidden, default=0)
+  MAXEMITER   max EM iteration (default=20)
+  EMEPSILON   convergence factor for EM iteration (default=0.0001)
+  USEGV       turn on GV-based parameter generation algorithm (0:off or 1:on,
+              default=1)
+  MAXGVITER   maximum number of iterations of GV-based parameter generation
+              algorithm (default=50)
+  GVEPSILON   convergence factor for GV iteration (default=0.0001)
+  MINEUCNORM  minimum Euclid norm for GV iteration (default=0.01)
+  STEPINIT    initial step size (default=1.0)
+  STEPINC     step size acceleration factor (default=1.2)
+  STEPDEC     step size deceleration factor (default=0.5)
+  HMMWEIGHT   weight for HMM output prob. (default=1.0)
+  GVWEIGHT    weight for GV output prob. (default=1.0)
+  OPTKIND     optimization method (STEEPEST, NEWTON, or LBFGS)
+              (default=NEWTON)
+  NOSILGV     turn on GV without silent and pause phoneme (0:off or 1:on,
+              default=1)
+  CDGV        turn on context-dependent GV (0:off or 1:on, default=1)
+  USEMSPF     turn on modulation spectrum-based postfilter (0:off or 1:on,
+              default=0)
+  USEDNN      use deep neural network as acoustic model (0:off or 1:on,
+              default=0)
+  NHIDDENUNITS
+              number of hidden units in each layer (1st 2nd 3rd ...)
+              (default='1024 1024 1024')
+  ACTIVATION  activation function for hidden units -> 0: Linear 1: Sigmoid 2:
+              Tanh 3: ReLU (default=1)
+  OPTIMIZER   optimizer -> 0: SGD 1: Momentum 2: AdaGrad 3: AdaDelta 4: Adam
+              5: RMSprop (default=4)
+  LEARNRATE   learning rate (default=0.001)
+  KEEPPROB    probability for not randomly setting activities to zero
+              (default=0.5)
+  USEQUEUE    use queue to load training data (0:off or 1:on, default=0)
+  QUEUESIZE   queue size (default=5000)
+  BATCHSIZE   mini-batch size (default=256)
+  NEPOCH      number of epochs (default=50)
+  NTHREAD     number of threads (0:unlimited, default=0)
+  RESTORECKPT checkpoint for parameter generation (default=130000)
+  RANDOMSEED  random seed for initialization (default=12345)
+
+  dans configure je commente
+   # test -z "$ac_cv_path_TEXT2UTT" && ac_cv_path_TEXT2UTT=":"
+
+   pas suffisant :
+   checking for text2utt... no
+configure: error: Can't find text2utt of festival
+
+je commente bien s√ªr
+if test ! -f "$TEXT2UTT"; then
+	as_fn_error $? "Can't find text2utt of festival" "$LINENO" 5
+fi
+
+hmm plus enb√™tant:
+configure: error: Can't find dumpfeats of festival
+
+il ne cherche pas au bon endroit !?
+ben oui
+
+du coup, je fais
+>getac@mx:~/Develop/festcat-voice-builder/work/create_ca_samples/upc_ca_base-3.0.6
+>/home/getac/Develop/festcat-voice-builder/essai.sh
+√ßa passe
+
+en fait il faudra changer l'effet de 
+# Create directory, extract file, configure and install inside our Festival instance
+upc_ca_base: download_upc_ca_base
+  mkdir -p upc_ca_base && \
+  tar xzf $(upc_ca_base_File) -C upc_ca_base --strip-components 1 && \
+  cd upc_ca_base && \
+  ./configure --enable-onlyinstall --enable-festivalpath=$(toolsdir)/festival/bin && \
+  $(MAKE) install           
+
+
+  mettre un lien dans festcat-voice-builder vers notre festival
+  ou changer toolsdir ?
+  pour l'instant puisqu'on a d√©j√† commencer je mets un lien symbolique..
\ No newline at end of file
diff --git a/essai.sh b/essai.sh
new file mode 100755
index 0000000..89c5aac
--- /dev/null
+++ b/essai.sh
@@ -0,0 +1,17 @@
+#!/bin/sh
+set -ev
+FESTIVALDIR=/home/getac/Develop/festival
+ESTDIR=/home/getac/Develop/festival
+FESTIVAL="$FESTIVALDIR"/bin
+WAGON="${ESTDIR}"/bin/wagon
+if test "${enable_wagonpath+set}" = set; then :
+  enableval=$enable_wagonpath; wagonpath=$enableval
+fi
+echo "$enableval"
+echo "$wagonpath"
+
+# essai non fructueux
+PERL=/usr/bin/perl; export PERL
+# getac@mx:~/Develop/festcat-voice-builder/work/create_ca_samples/upc_ca_base-3.0.6
+# y a pas l'√©quivalent de configure:2271: checking for festival
+./configure --enable-onlyinstall --enable-festivalpath="$FESTIVAL" --enable-wagonpath="$WAGON"
