; mettre être dans addenda

(lex.add.entry '("ils_PRO:per" "PRO:per" (((i l) 0))))
(lex.add.entry '("ne_ADV" "ADV" (((n ae) 0))))
(lex.add.entry '("peuvent_VER" VER ((("p" "eu" "v") 0))))
(lex.add.entry '("pas_ADV" ADV ((("p" "a") 0))))
(lex.add.entry '("être_VER" "VER" (((z "eh" "t" "rh") 0)))); LIA
(lex.add.entry '("contraires_ADJ" ADJ ((("k" "ohn") 0) (("t" "rh" "eh" "rh") 0))))
(lex.add.entry '("au_ART:def" "ART:def" ((("o") 0)))); no LIA
(lex.add.entry '("droit_NOM" "NOM" ((("d" "rh" "w" "a") 0))))
(lex.add.entry '("du_ART:def" "ART:def" ((("d" "y") 0))))
(lex.add.entry '("travail_NOM" "NOM" ((("t" "rh" "a") 0) (("v" "a" "j") 0))))
(lex.add.entry '("ou_CON" "CON" ((("u") 0))))
(lex.add.entry '("au_ART:def" "ART:def" ((("o") 0))))
(lex.add.entry '("code_NOM" "NOM" ((("k" "oh" "d") 0))))
(lex.add.entry '("du_ART:def" "ART:def" ((("d" "y") 0))))
(lex.add.entry '("travail_NOM" "NOM" ((("t" "rh" "a") 0) (("v" "a" "j") 0))))


(set! text "Ils ne peuvent pas être contraires au droit du travail ou au code du travail.") ; neut_parl_s04_0181
(dSayText text)