(lex.add.entry '("on_PRO:per" "PRO:per" ((("ohn") 0))))
(lex.add.entry '("peut_VER" "VER" ((("p" "eu") 0))))
(lex.add.entry '("le_PRO:per" "PRO:per" ((("l" "ae") 0))))
(lex.add.entry '("faire_VER" "VER" ((("f" "eh" "rh") 0))))
(lex.add.entry '("si_CON" "CON" ((("s" "i") 0))))
(lex.add.entry '("ce_ADJ:dem" "ADJ:dem" (((s ae) 0))))
(lex.add.entry '("principe_NOM" "NOM" ((("p" "rh" "ehn") 0) (("s" "i" "p") 0))))
(lex.add.entry '("vient_VER" VER ((("v" "j" "ehn") 0))))
(lex.add.entry '("en_PRE" "PRE" (((t ahn) 0)))); LIA
(lex.add.entry '("contrepartie_NOM" "NOM" ((("k" "ohn") 0) (("t" "rh" "ae") 0) (("p" "a" "rh") 0) (("t" "i") 0))))
(lex.add.entry '("d_un_ART:ind" ART:ind (((d "oen") 0))))
(lex.add.entry '("autre_ADJ" "ADJ" (((n "o" "t" "rh") 0)))); LIA
(lex.add.entry '("principe_NOM" "NOM" ((("p" "rh" "ehn") 0) (("s" "i" "p") 0))))
(lex.add.entry '("de_PRE" "PRE" (((d ae) 0))))
(lex.add.entry '("même_ADJ" "ADJ" ((("m" "eh" "m") 0))))
(lex.add.entry '("niveau_NOM" "NOM" ((("n" "i") 0) (("v" "o") 0))))

(set! text "on peut le faire si ce principe, vient en contrepartie d'un autre principe de même niveau.") ; neut_parl_s01_0011
(dSayText text)
