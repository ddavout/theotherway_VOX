(lex.add.entry '("autres_PRO:ind" PRO:ind ((("o") 0) (("t" "rh" ae) 0))))
(lex.add.entry '("peuvent_VER" VER ((("p" "eu" "v") 0))))
(lex.add.entry '("faire_VER" "VER" ((("f" "eh" "rh") 0))))
(lex.add.entry '("un_ART:ind" "ART:ind" ((("oen") 0))))
(lex.add.entry '("choix_NOM" "NOM" ((("sh" "w" "a") 0))))
(lex.add.entry '("différent_ADJ" "ADJ" ((("d" "i") 0) (("f" "e") 0) (("rh" "ahn") 0))))
(lex.add.entry '("ce_PRO:dem" "PRO:dem" (((s ae) 0))))
(lex.add.entry '("que_PRO:rel" "PRO:rel" (((k ae) 0))))
(lex.add.entry '("l_PRO:per" "PRO:per" nil))
(lex.add.entry '("on_PRO:per" "PRO:per" ((("ohn") 0))))
(lex.add.entry '("peut_VER" "VER" ((("p" "eu") 0))))
(lex.add.entry '("appelé_VER" VER ((("a") 0) (("p" "l" "e") 0))))
(lex.add.entry '("le_ART:def" "ART:def" ((("l" "ae") 0))))
(lex.add.entry '("mitage_NOM" "NOM" ((("m" "i") 0) (("t" "a")0) (("zh" ae) 0))))


(set! never_exception_list (append (list "peut" ) never_exception_list_default))
(dSayText "d'autres peuvent faire un choix différent, ce que l'on peut appeler le mitage.") ; neut_parl_s04_0307
