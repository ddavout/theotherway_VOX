(lex.add.entry '("on_PRO:per" "PRO:per" ((("ohn") 0))))
(lex.add.entry '("peut_VER" "VER" ((("p" "eu") 0))))
(lex.add.entry '("dire_VER" "VER" ((("d" "i" "rh") 0))))
(lex.add.entry '("que" nil (((k a) 0))))
(lex.add.entry '("le_ART:def" "ART:def" ((("l" "ae") 0))))
(lex.add.entry '("débat_NOM" "NOM" ((("d" "e") 0) (("b" "a") 0))))
(lex.add.entry '("a_AUX" "AUX" ((("a") 0))))
(lex.add.entry '("eu_VER" "VER" (((y) 0))))
(lex.add.entry '("lieu_NOM" "NOM" ((("l" "j" "eu") 0))))
(lex.add.entry '("qu_il_PRO:per" "PRO:per" (((k i l) 0))))
(lex.add.entry '("n_a_AUX" AUX ((("n" "a") 0))))
(lex.add.entry '("pas_ADV" ADV ((("p" "a") 0))))
(lex.add.entry '("z_eu_VER" "VER" (((z y) 0)))); LIA
(lex.add.entry '("lieu_NOM" "NOM" ((("l" "j" "eu") 0))))
(lex.add.entry '("ou_CON" "CON" ((("u") 0))))
(lex.add.entry '("qu_il_PRO:per" "PRO:per" (((k i l) 0))))
(lex.add.entry '("aura_VER" "VER" ((("oh") 0) (("rh" "a") 0))))
(lex.add.entry '("lieu_NOM" "NOM" ((("l" "j" "eu") 0))))


(set! text "On peut dire que le débat a eu lieu, qu'il n'a pas z_eu lieu ou qu'il aura lieu.") ; 
(dSayText text); neut_parl_s01_0330

