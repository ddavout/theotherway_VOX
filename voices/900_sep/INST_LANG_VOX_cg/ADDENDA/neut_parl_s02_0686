(lex.add.entry '("eh_ONO" "ONO" ((("e") 0))))
(lex.add.entry '("oui_ADV" "ADV" ((("w" "i") 0))))
(lex.add.entry '("elles_PRO:per" PRO:per ((("eh" "l") 0))))
(lex.add.entry '("sont_VER" VER ((("s" "ohn") 0))))
(lex.add.entry '("toutes_ADJ" ADJ ((("t" "u" "t") 0))))
(lex.add.entry '("liées_VER" VER ((("l" "j" "e") 0))))
(lex.add.entry '("et_CON" "CON" ((("e") 0))))
(lex.add.entry '("c_PRO:dem" "PRO:dem" nil))
(lex.add.entry '("c_est_VER" "VER" (((s eh) 0))))
(lex.add.entry '("cela_PRO:dem" "PRO:dem" ((("s" "ae") 0) (("l" "a") 0))))
(lex.add.entry '("que_PRO:rel" "PRO:rel" (((k ae) 0))))
(lex.add.entry '("nous_PRO:per" "PRO:per" ((("n" "u") 0))))
(lex.add.entry '("voulons_VER" VER ((("v" "u") 0) (("l" "ohn") 0))))
(lex.add.entry '("mettre_VER" "VER" ((("m" "eh") 0))))
(lex.add.entry '("en_avant_ADV" "ADV" (((t rh ahn) 0) ((n a) 0) ((v ahn) 0))))
(lex.add.entry '("ici_ADV" "ADV" ((("i") 0) (("s" "i") 0))))

(dSayText "Eh oui, elles sont toutes liées, et c'est cela, que nous voulons mettre en avant ici.") ; neut_parl_s02_0686
