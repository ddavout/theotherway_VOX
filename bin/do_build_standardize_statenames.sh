#!/bin/env bash
# set -eauo pipefail -
# ./bin/do_ehmm_standardize_statenames.sh
#####################################################-*-mode:shell-script-*-
##                                                                       ##
##                     Carnegie Mellon University                        ##
##                        Copyright (c) 2005                             ##
##                        All Rights Reserved.                           ##
##                                                                       ##
##  Permission is hereby granted, free of charge, to use and distribute  ##
##  this software and its documentation without restriction, including   ##
##  without limitation the rights to use, copy, modify, merge, publish,  ##
##  distribute, sublicense, and/or sell copies of this work, and to      ##
##  permit persons to whom this work is furnished to do so, subject to   ##
##  the following conditions:                                            ##
##   1. The code must retain the above copyright notice, this list of    ##
##      conditions and the following disclaimer.                         ##
##   2. Any modifications must be clearly marked as such.                ##
##   3. Original authors' names are not deleted.                         ##
##   4. The authors' names are not used to endorse or promote products   ##
##      derived from this software without specific prior written        ##
##      permission.                                                      ##
##                                                                       ##
##  CARNEGIE MELLON UNIVERSITY AND THE CONTRIBUTORS TO THIS WORK         ##
##  DISCLAIM ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING      ##
##  ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT   ##
##  SHALL CARNEGIE MELLON UNIVERSITY NOR THE CONTRIBUTORS BE LIABLE      ##
##  FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    ##
##  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN   ##
##  AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,          ##
##  ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF       ##
##  THIS SOFTWARE.                                                       ##
##                                                                       ##
###########################################################################
##                                                                       ##
##  Do EHMM labeling standardize_statenames                              ##
##                                                                       ##
###########################################################################
# to be run in the VOX directory
set -euo pipefail -
    LANG=C; export LANG
    export PROMPTFILE
    vanilla=1
    # mv etc/statenames peut produire une erreur
    # pb de fichiers obsolètes
    # mv lab/"$x".sl lab/"$x".slehmm  existants pour ensuite les regénérer ne facilite pas le contrôle
    vanilla=0

# at minima
if [[ -s etc/statenames ]]; then
    ( cat etc/statenames ) | tee etc/statenames.bak etc/statenames.ehmm 1>/dev/null
else
    echo "no proper etc/statenames, it should have been generated by do_ehmm_align."
    exit 66
fi
if [[ "$vanilla" == "0" ]]; then

    #cp etc/statenames etc/statenames.ehmm || true;
    # SC2002 (style): Useless cat. Consider 'cmd < file | ..' or 'cmd file | ..' instead.
    # shellcheck disable=SC2002
    cat etc/statenames.ehmm |
    sed 's/_[0-9][0-9]* /__&/g' | sed 's/___/ /g' |
    awk  '{if (NF >= 4)
          {
             printf("%s %s_1 %s_2 ",$1,$2,$4);
             for (i=6; i<NF; i+=2)
                printf("%s_%d ",$i,i/2);
             printf("\n");
          }
          else
             printf("%s %s_5\n",$1,$2);
         }' >etc/statenames
    #SC2002 (style): Useless cat. Consider 'cmd < file | ..' or 'cmd file | ..' instead.
    # shellcheck disable=SC2002
    cat etc/statenames.ehmm |
    sed 's/_[0-9][0-9]* /__&/g' | sed 's/___/ /g' |
    awk  'BEGIN { printf("BEGIN { \n");}
         {if (NF >= 4)
          {
             printf("statenamemap[%d] = 1;\n",$3);
             printf("statename[%d] = \"%s\";\n",$3,$2);
             printf("statenamemap[%d] = 2;\n",$5);
             printf("statename[%d] = \"%s\";\n",$5,$4);
             for (i=6; i<NF; i+=2)
             {
                printf("statenamemap[%d] = %d;\n",$(i+1),i/2);
                printf("statename[%d] = \"%s\";\n",$(i+1),$i);
             }
          }
          else
          {
             printf("statenamemap[%d] = 5;\n",$3);
             printf("statename[%d] = \"%s\";\n",$3,$2);
          }
         }
         END {printf("}\n");
              printf("{ if (NF < 3)\n");
              printf("     print $0;\n");
              printf("  else\n");
              printf("     printf(\"%%s 125 %%d %%s\\n\",$1,statenamemap[$3],statename[$3])\n");
              printf("}\n");}' >etc/mapstatenames.awk 
   #SC2162 (info): read without -r will mangle backslashes.
   #SC2086 (info): Double quote to prevent globbing and word splitting
   # shellcheck disable=SC2002
   cat "${PROMPTFILE}" |
   awk  '{print $2}' |
   #SC2086 (info): Double quote to prevent globbing and word splitting
   while read -r x
   do
      mv lab/"$x".sl lab/"$x".slehmm || exit 77
      awk  -f etc/mapstatenames.awk  lab/"$x".slehmm >lab/"$x".sl
   done
   #exit
fi
if [[ ! -s 'etc/statenames' ]] ; then
    echo "etc/statenames not generated, needed later"
    exit 66
fi
exit 0
